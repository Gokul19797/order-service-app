name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger pipeline on changes to the main branch

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up JDK (for Maven build)
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'

      # Step 3: Build the application using Maven
      - name: Build with Maven
        run: mvn clean package -DskipTests
      - name: Set dynamic Docker tag
        id: set-docker-tag
        run: echo "TAG=$(date +'%Y%m%d%H%M%S')-${{ github.sha }}" >> $GITHUB_ENV

      # Step 5: Build Docker image
      - name: Build and push Docker image to Docker Hub
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: gokulkrishnanm97/order-service:${{ env.TAG }}
          registry: docker.io  # Docker Hub registry
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 7: Set up kubectl to interact with your Minikube cluster
      - name: Set up kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      # Step 8: Automatically update Kubernetes deployment with new image tag
      - name: Update Kubernetes deployment with new image
        run: |
          # Replace the image tag in deployment.yaml with the new tag
          sed -i "s|gokulkrishnanm97/order-service:.*|gokulkrishnanm97/order-service:${{ env.TAG }}|" k8s/deployment.yaml
          
          # Apply the updated deployment and service to Kubernetes
          kubectl apply -f deployment.yaml
